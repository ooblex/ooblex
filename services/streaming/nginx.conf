server {
    listen 80;
    server_name _;
    
    # HLS/DASH content location
    location /streams/ {
        # Disable cache for manifest files
        location ~ \.(m3u8|mpd)$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            
            # CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            
            # Low-latency HLS headers
            add_header X-Accel-Buffering "no";
        }
        
        # Cache segments
        location ~ \.(ts|m4s|mp4)$ {
            add_header Cache-Control "public, max-age=3600";
            
            # CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
        }
        
        # Serve files
        alias /var/www/streams/;
        autoindex off;
        
        # Enable sendfile for better performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        
        # Increase buffer sizes for streaming
        sendfile_max_chunk 1m;
        
        # Gzip compression (but not for video segments)
        gzip on;
        gzip_types text/plain application/x-mpegURL application/dash+xml;
        gzip_min_length 1000;
    }
    
    # Streaming API proxy
    location /api/streaming/ {
        proxy_pass http://streaming:8083/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # WebSocket support for live updates
    location /api/streaming/ws {
        proxy_pass http://streaming:8083/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
}

# CDN-optimized configuration
server {
    listen 8084;
    server_name _;
    
    # Root directory for CDN
    root /var/www/streams;
    
    # Default type
    default_type application/octet-stream;
    
    # Optimize for CDN delivery
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    
    # Large file support
    client_max_body_size 0;
    sendfile_max_chunk 1m;
    
    # Enable byte-range requests
    add_header Accept-Ranges bytes;
    
    # Manifest files - no cache
    location ~ \.(m3u8|mpd)$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-Content-Type-Options "nosniff";
        
        # CORS for CDN
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
        
        # Low latency headers
        add_header X-Accel-Buffering "no";
        
        # ETag support
        etag on;
    }
    
    # Media segments - aggressive caching
    location ~ \.(ts|m4s|mp4|init)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # CORS for CDN
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
        
        # ETag support
        etag on;
        
        # Enable compression for init segments
        location ~ \.init$ {
            gzip on;
            gzip_types application/octet-stream;
        }
    }
    
    # Subtitles and metadata
    location ~ \.(vtt|srt|ttml)$ {
        add_header Cache-Control "public, max-age=3600";
        add_header X-Content-Type-Options "nosniff";
        
        # CORS
        add_header Access-Control-Allow-Origin *;
        
        # Text compression
        gzip on;
        gzip_types text/vtt text/plain;
    }
    
    # Handle OPTIONS requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }
    
    # 404 handling
    error_page 404 /404.json;
    location = /404.json {
        internal;
        default_type application/json;
        return 404 '{"error": "Not Found"}';
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}