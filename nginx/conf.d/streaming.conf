# HLS/DASH Streaming Configuration
upstream streaming_backend {
    server streaming:8083;
}

# Main streaming server
server {
    listen 80;
    server_name stream.* streaming.*;
    
    # Redirect to HTTPS if available
    # if ($https = "on") {
    #     return 301 https://$server_name$request_uri;
    # }
    
    # Streaming API
    location /api/ {
        proxy_pass http://streaming_backend/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # HLS/DASH content
    location /streams/ {
        # Volume mounted from streaming container
        alias /var/www/streams/;
        
        # Disable cache for manifest files
        location ~ \.(m3u8|mpd)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range" always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range" always;
            
            # Low-latency HLS headers
            add_header X-Accel-Buffering "no";
        }
        
        # Cache segments aggressively
        location ~ \.(ts|m4s|mp4|init)$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range" always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range" always;
        }
        
        # Enable sendfile for better performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        
        # Increase buffer sizes for streaming
        sendfile_max_chunk 1m;
        
        # Gzip compression for text files
        gzip on;
        gzip_types text/plain application/x-mpegURL application/dash+xml text/vtt;
        gzip_min_length 1000;
    }
    
    # Handle OPTIONS requests for CORS
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range" always;
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }
}

# CDN Edge configuration (port 8084)
server {
    listen 8084;
    server_name _;
    
    # Direct file serving for CDN
    root /var/www/streams;
    
    # Default type
    default_type application/octet-stream;
    
    # Optimize for CDN delivery
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    
    # Large file support
    client_max_body_size 0;
    sendfile_max_chunk 2m;
    aio threads;
    directio 8m;
    
    # Enable byte-range requests
    add_header Accept-Ranges bytes always;
    
    # Manifest files - short cache with revalidation
    location ~ \.(m3u8|mpd)$ {
        expires 1s;
        add_header Cache-Control "public, max-age=1, must-revalidate";
        add_header X-Content-Type-Options "nosniff" always;
        
        # CORS for CDN
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Date, ETag" always;
        
        # Low latency headers
        add_header X-Accel-Buffering "no";
        
        # ETag support
        etag on;
    }
    
    # Media segments - immutable caching
    location ~ \.(ts|m4s|mp4|init)$ {
        expires 365d;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        
        # CORS for CDN
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Date, ETag" always;
        
        # ETag support
        etag on;
    }
    
    # Subtitles and metadata
    location ~ \.(vtt|srt|ttml)$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        add_header X-Content-Type-Options "nosniff" always;
        
        # CORS
        add_header Access-Control-Allow-Origin * always;
        
        # Text compression
        gzip on;
        gzip_types text/vtt text/plain application/ttml+xml;
    }
    
    # Handle OPTIONS requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range" always;
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }
    
    # 404 handling
    error_page 404 = @error404;
    location @error404 {
        default_type application/json;
        return 404 '{"error": "Not Found", "code": 404}';
    }
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
}