apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ooblex-ingress
  namespace: ooblex
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "webrtc-service,api-service"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  tls:
  - hosts:
    - ooblex.example.com
    - api.ooblex.example.com
    - webrtc.ooblex.example.com
    - stream.ooblex.example.com
    secretName: ooblex-tls
  rules:
  - host: ooblex.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
  - host: api.ooblex.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8800
  - host: webrtc.ooblex.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: webrtc-service
            port:
              number: 8100
  - host: stream.ooblex.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mjpeg-service
            port:
              number: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: ooblex
  labels:
    app: frontend
    component: web
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: frontend
    component: web
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ooblex
  labels:
    app: frontend
    component: web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
      component: web
  template:
    metadata:
      labels:
        app: frontend
        component: web
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: html
        configMap:
          name: frontend-html
      - name: nginx-config
        configMap:
          name: nginx-config