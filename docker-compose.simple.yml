version: '3.8'

services:
  # Redis for frame queuing
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Simple ML Worker with OpenCV effects
  ml-worker:
    build:
      context: ./services/ml-worker
      dockerfile: Dockerfile.simple
    deploy:
      replicas: 3
    environment:
      REDIS_URL: redis://redis:6379
      WORKER_ID: "{{.Task.Slot}}"
      LOG_LEVEL: info
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./services/ml-worker:/app
      - ./models/cascades:/models/cascades
    command: python ml_worker_simple.py

  # WebRTC Server
  webrtc:
    build:
      context: ./services/webrtc
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "8001-8010:8001-8010/udp"
    environment:
      REDIS_URL: redis://redis:6379
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8000
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./services/webrtc:/app
      - ./ssl:/ssl

  # Simple web server for the demo
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./html:/usr/share/nginx/html
      - ./ssl:/etc/nginx/ssl
      - ./nginx/simple.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - webrtc

volumes:
  redis_data: